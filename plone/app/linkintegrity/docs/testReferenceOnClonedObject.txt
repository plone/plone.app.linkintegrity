This tests ensures that link integrity is correctly setup when cloning an
object.

First we need to set up a link:

  >>> self.setRoles(('Manager',))
  >>> self.setText(portal.doc1, '<a href="doc2">a document</a>')
  >>> import transaction
  >>> transaction.commit()

The we need to clone the document:

  >>> portal.doc1.object_copy()
  'http://nohost/plone/doc1/'
  >>> portal.object_paste()
  'http://nohost/plone/'

  >>> browser = self.getBrowser(loggedIn=True)
  >>> browser.open('http://nohost/plone/folder_contents')
  >>> browser.contents
  '...<tr...href="http://nohost/plone/doc1"...Test Page 1...</tr>...
   ...<tr...href="http://nohost/plone/doc2"...Test Page 2...</tr>...
   ...<tr...href="http://nohost/plone/copy_of_doc1"...Test Page 1...</tr>...'

Then we try to delete the document linked by the original document and its
clone. Before we can do this we need to prevent the test framework from choking 
on the exception we intentionally throw 
(see docs/testRemovalTriggersConfirmation.txt for more info):

  >>> self.setStatusCode('LinkIntegrityNotificationException', 200)
  >>> browser.getControl('Test Page 2').selected = True
  >>> browser.getControl('Delete').click()
  >>> browser.contents
  '...<form ... action="http://nohost/plone/removeConfirmationAction">...
   ...<a href="http://nohost/plone/doc2"...Test Page 2...
   ...This...Document...is referenced by the following items:...
   ...<li>...href="http://nohost/plone/doc1"...Test Page 1...</li>...
   ...<li>...href="http://nohost/plone/copy_of_doc1"...Test Page 1...</li>...
   ...Would you like to delete it anyway?...'
